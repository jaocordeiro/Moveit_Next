{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/joao/Documentos/developer/moveit-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/joao/Documentos/developer/moveit-next/src/components/Countdonw.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { ChallengesContext } from '../contexts/ChallengesContext';\nimport styles from '../styles/components/Countdown.module.css'; // let countdownTimeout: NodeJS.Timeout;\n\nexport function Countdown() {\n  _s();\n\n  var _useContext = useContext(ChallengesContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var _useState = useState(0.1 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time == 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive),\n        onClick: resetCountdown,\n        children: \"Abandonar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Countdown, \"cVu0hsDf1rnm10+qbfS96WIdEJo=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/home/joao/Documentos/developer/moveit-next/src/components/Countdonw.tsx"],"names":["useContext","useEffect","useState","ChallengesContext","styles","Countdown","startNewChallenge","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","startCountdown","resetCountdown","clearTimeout","countdownTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { ChallengesContext } from '../contexts/ChallengesContext';\nimport styles from '../styles/components/Countdown.module.css';\n\n// let countdownTimeout: NodeJS.Timeout;\n\nexport function Countdown() {\n    const { startNewChallenge } = useContext(ChallengesContext);\n\n    const [time, setTime] = useState(0.1 * 60);\n    const [isActive, setIsActive] = useState(false)\n    const [hasFinished, setHasFinished] = useState(false);\n\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n    function startCountdown() {\n        setIsActive(true)\n    }\n\n    function resetCountdown() {\n        clearTimeout(countdownTimeout);\n        setIsActive(false)\n        setTime(0.1 * 60);\n    }\n\n    useEffect(() => {\n        if(isActive && time > 0) {\n            countdownTimeout = setTimeout(() => {\n                setTime(time - 1);\n            }, 1000)\n        } else if (isActive && time == 0) {\n            setHasFinished(true);\n            setIsActive(false);\n            startNewChallenge();\n            }\n    }, [isActive, time])\n\n    return(\n        <div>\n            <div className={styles.countdownContainer}>\n                <div>\n                    <span>{minuteLeft}</span>\n                    <span>{minuteRight}</span>\n                </div>\n                <span>:</span>\n                <div>\n                    <span>{secondLeft}</span>\n                    <span>{secondRight}</span>\n                </div>\n            </div>\n\n            { hasFinished ? (\n                <button\n                    disabled\n                    className= {styles.countdownButton}\n                >\n                    Ciclo encerrado\n                </button>\n            ) : (\n                <>\n                    { isActive ? (\n                <button \n                    type=\"button\" \n                    className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\n                    onClick={resetCountdown}\n                > \n                    Abandonar um ciclo\n                </button>\n                ) : (\n                <button \n                    type=\"button\" \n                    className={styles.countdownButton}\n                    onClick={startCountdown}\n                > \n                    Iniciar um ciclo\n                </button>\n            )  }\n                </>\n            )}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}